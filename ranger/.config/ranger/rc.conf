# ===================================================================
# This file contains the default startup commands for ranger.
# To change them, it is recommended to create either /etc/ranger/rc.conf
# (system-wide) or ~/.config/ranger/rc.conf (per user) and add your custom
# commands there.
#
# If you copy this whole file there, you may want to set the environment
# variable RANGER_LOAD_DEFAULT_RC to FALSE to avoid loading it twice.
#
# The purpose of this file is mainly to define keybindings and settings.
# For running more complex python code, please create a plugin in "plugins/" or
# a command in "commands.py".
#
# Each line is a command that will be run before the user interface
# is initialized.  As a result, you can not use commands which rely
# on the UI such as :delete or :mark.
# ===================================================================

# ===================================================================
# == Options
# ===================================================================

# Which viewmode should be used?  Possible values are:
#     miller: 多层层次结构
#     multipane: 多窗口
#     实测第一个好看
set viewmode miller
#set viewmode multipane

# 修改列宽
set column_ratios 1,2,5

# 需要隐藏的文件（正则表达式）
set hidden_filter ^\.|\.(?:pyc|pyo|bak|swp)$|^lost\+found$|^__(py)?cache__$

# 默认是否显示隐藏文件
set show_hidden false

#在运行“删除”命令时要求确认？
#有效值为“ always”，“ never”，“ multiple”（默认值）
#使用“多个”时，护林员只会询问您是否一次删除多个文件。
set confirm_on_delete multiple

#使用非默认路径作为文件预览脚本吗？
#Ranger随附scope.sh，这是一个调用外部程序的脚本（请参阅
#README.md用于依赖性）以预览图像，档案等。
#set preview_script ~/.config/ranger/scope.sh

# 使用外部浏览脚本还是显示简单的纯文本或图像浏览
set use_preview_script true

# 在输入目录之前自动计算目录中的文件
set automatically_count_files true

#运行某些图像查看器时打开此目录中的所有图像
#喜欢feh或sxiv？您仍然可以通过标记选定文件来打开它们。
set open_all_images false

# 是否显示git仓库状态的信息
set vcs_aware true

# 显示哪些版本控制的状态信息 git hg bzr svn
set vcs_backend_git enabled
set vcs_backend_hg disabled
set vcs_backend_bzr disabled
set vcs_backend_svn disabled

# 使用受支持的图像预览协议之一
set preview_images true

# Set the preview image method. Supported methods:
#
# * w3m (default):
#   Preview images in full color with the external command "w3mimgpreview"?
#   This requires the console web browser "w3m" and a supported terminal.
#   It has been successfully tested with "xterm" and "urxvt" without tmux.
#
# * iterm2:
#   Preview images in full color using iTerm2 image previews
#   (http://iterm2.com/images.html). This requires using iTerm2 compiled
#   with image preview support.
#
#   This feature relies on the dimensions of the terminal's font.  By default, a
#   width of 8 and height of 11 are used.  To use other values, set the options
#   iterm2_font_width and iterm2_font_height to the desired values.
#
# * terminology:
#   Previews images in full color in the terminology terminal emulator.
#   Supports a wide variety of formats, even vector graphics like svg.
#
# * urxvt:
#   Preview images in full color using urxvt image backgrounds. This
#   requires using urxvt compiled with pixbuf support.
#
# * urxvt-full:
#   The same as urxvt but utilizing not only the preview pane but the
#   whole terminal window.
#
# * kitty:
#   Preview images in full color using kitty image protocol.
#   Requires python PIL or pillow library.
#   If ranger does not share the local filesystem with kitty
#   the transfer method is changed to encode the whole image;
#   while slower, this allows remote previews,
#   for example during an ssh session.
#   Tmux is unsupported.
#   使用以上哪个方法预览图像
set preview_images_method w3m

#使用w3m方法显示图像之前的延迟（以秒为单位）。
#增加它，以防显示损坏。
set w3m_delay 0.02

# 默认的iTerm2字体大小
set iterm2_font_width 8
set iterm2_font_height 11

# 使用Unicode字符“ ...”标记截止文件名？
set unicode_ellipsis true

# BIDI支持-尝试以RTL语言（希伯来语，阿拉伯语）正确显示文件名
# 需要python-bidi pip软件包
set bidi_support false

# 在书签中显示隐藏文件
set show_hidden_bookmarks true

# 选择哪种配色方案
# 官方配色不咋地,还是默认或自己找把
# default, jungle, snow, solarized
set colorscheme default

# Preview files on the rightmost column?
# And collapse (shrink) the last column if there is nothing to preview?
# 没啥用，不翻译了
set preview_files true
set preview_directories true
set collapse_preview true

# 退出保存控制台历史记录
set save_console_history true

# 状态栏的位置
set status_bar_on_top false

# Draw a progress bar in the status bar which displays the average state of all
# currently running tasks which support progress bars?
# 进度条
set draw_progress_bar_in_status_bar true

# Draw borders around columns? (separators, outline, both, or none)
# Separators are vertical lines between columns.
# Outline draws a box around all the columns.
# Both combines the two.
# 边框
set draw_borders both

# Display the directory name in tabs?
# 在选项卡中显示目录名称
set dirname_in_tabs false

# 鼠标支持
set mouse_enabled true

# 显示文件大小
set display_size_in_main_column true
set display_size_in_status_bar true

# 显示可用磁盘大小
set display_free_space_in_status_bar true

# 在所有列中或仅在主列中显示文件标签
set display_tags_in_all_columns true

# 为窗口设置标题
set update_title true

# 在tmux程序中将标题设置为“ ranger”
set update_tmux_title true

# 如果标题太长，请缩短标题？这个数字定义了多少一次显示几个目录，0关闭此功能。
set shorten_title 3

# 在标题栏中显示主机名
set hostname_in_titlebar true

# 在Ranger的标题栏中（第一行）用〜缩写$ HOME
set tilde_in_titlebar true

# 历史记录中应保留多少个目录更改或控制台命令
set max_history_size 20
set max_console_history_size 50

# 滚动时，尝试在上下边框之间保持足够的空间
set scroll_offset 8

# 点击后重新输入
set flushinput true

#没有预览时在右侧填充？
#这使您可以单击空格以运行文件。
set padding_right true

# Save bookmarks (used with mX and `X) instantly?
# This helps to synchronize bookmarks between multiple ranger
# instances but leads to *slight* performance loss.
# When false, bookmarks are saved when ranger is exited.
# 立即保存书签或者退出时保存
set autosave_bookmarks true

# Save the "`" bookmark to disk.  This can be used to switch to the last
# directory by typing "``".
#将“`”书签保存到磁盘。这可以用来切换到最后
#键入“''”。
set save_backtick_bookmark true

# You can display the "real" cumulative size of directories by using the
# command :get_cumulative_size or typing "dc".  The size is expensive to
# calculate and will not be updated automatically.  You can choose
# to update it automatically though by turning on this option:
# 目录的“实际”累积大小
set autoupdate_cumulative_size false

# Turning this on makes sense for screen readers:
# 启用此选项对于屏幕阅读器很有意义：
set show_cursor true

# One of: size, natural, basename, atime, ctime, mtime, type, random
# 排序方式
set sort natural

# Additional sorting options
# 其他排序选项
set sort_reverse false
set sort_case_insensitive true
set sort_directories_first true
set sort_unicode false

# Enable this if key combinations with the Alt Key don't work for you.
# (Especially on xterm)
# 是否开启alt快捷键?
set xterm_alt_key false

# Whether to include bookmarks in cd command
# 是否在cd命令中包含书签
set cd_bookmarks true

# Changes case sensitivity for the cd command tab completion
# 更改cd命令选项卡完成的大小写敏感性
set cd_tab_case nosensitive

# Use fuzzy tab completion with the "cd" command. For example,
# ":cd /u/lo/b<tab>" expands to ":cd /usr/local/bin".
# cd命令使用模糊制表符补全
set cd_tab_fuzzy true

# Avoid previewing files larger than this size, in bytes.  Use a value of 0 to
# disable this feature.
# 避免预览大于此大小的文件 0禁用此功能
set preview_max_size 0

# The key hint lists up to this size have their sublists expanded.
# Otherwise the submaps are replaced with "...".
#最多此大小的按键提示列表的子列表已展开。
#否则子图将替换为“ ...”。
set hint_collapse_threshold 10

# Add the highlighted file to the path in the titlebar
# 将突出显示的文件添加到标题栏中的路径
set show_selection_in_titlebar true

# The delay that ranger idly waits for user input, in milliseconds, with a
# resolution of 100ms.  Lower delay reduces lag between directory updates but
# increases CPU load.
# 等待用户输入的延迟
set idle_delay 2000

# When the metadata manager module looks for metadata, should it only look for
# a ".metadata.json" file in the current directory, or do a deep search and
# check all directories above the current one as well?
#当元数据管理器模块查找元数据时，应该只查找
#在当前目录中添加一个“ .metadata.json”文件，或者进行深度搜索并
#检查当前目录上方的所有目录？
set metadata_deep_search false

# Clear all existing filters when leaving a directory
# 离开目录时清除所有现有过滤器
set clear_filters_on_dir_change false

# Disable displaying line numbers in main column.
# Possible values: false, absolute, relative.
# 禁止在主栏中显示行号。
set line_numbers false

# When line_numbers=relative show the absolute line number in the
# current line.
# 当line_numbers = relative显示绝对行号时
set relative_current_zero false

# Start line numbers from 1 instead of 0
# 当line_numbers = relative显示绝对行号时
set one_indexed false

# Save tabs on exit
# 在退出时保存标签
set save_tabs_on_exit false

# Enable scroll wrapping - moving down while on the last item will wrap around to
# the top and vice versa.
# 启用滚动环绕-在最后一项上向下移动将环绕
set wrap_scroll true

# Set the global_inode_type_filter to nothing.  Possible options: d, f and l for
# directories, files and symlinks respectively.
#将global_inode_type_filter设置为空。可能的选项：d，f和l
#目录，文件和符号链接。
set global_inode_type_filter

# This setting allows to freeze the list of files to save I/O bandwidth.  It
# should be 'false' during start-up, but you can toggle it by pressing F.
#此设置允许冻结文件列表以节省I / O带宽。它
#在启动过程中应为“ false”，但您可以通过按F进行切换。
set freeze_files false

# ===================================================================
# == Local Options
# ===================================================================
# You can set local options that only affect a single directory.

# Examples:
# setlocal path=~/downloads sort mtime

# ===================================================================
# == Command Aliases in the Console
# ===================================================================
# 控制台的命令别名

alias e     edit
alias q     quit
alias q!    quit!
alias qa    quitall
alias qa!   quitall!
alias qall  quitall
alias qall! quitall!
alias setl  setlocal

alias filter     scout -prts
alias find       scout -aets
alias mark       scout -mr
alias unmark     scout -Mr
alias search     scout -rs
alias search_inc scout -rts
alias travel     scout -aefklst

# ===================================================================
# == Define keys for the browser
# ===================================================================

# Basic
map     Q quitall
map     q quit
copymap q ZZ ZQ

map R     reload_cwd
map F     set freeze_files!
map <C-r> reset
map <C-l> redraw_window
map <C-c> abort
map <esc> change_mode normal
map ~ set viewmode!

map i display_file
map ? help
map W display_log
map w taskview_open
map S shell $SHELL

map :  console
map ;  console
map !  console shell%space
map @  console -p6 shell %%s
map #  console shell -p%space
map s  console shell%space
map r  chain draw_possible_programs; console open_with%space 
#map f  console scout -ftsea%space
map f fzf_select
map cd console cd%space
map gl shell lazygit

map e console edit

map <C-p> chain console; eval fm.ui.console.history_move(-1)

# 图标
default_linemode devicons

# 回收站
map Dd shell trash-put %s
map TD shell trash-empty
map Tt console shell nvim%space
map gT cd /home/yzl178me/.local/share/Trash/files/

# 压缩和解压
#map C console compress%space
# map X shell chsh -s /bin/zsh&&extract %s
map Xx console shell sh /home/yzl178me/test/shell/extract.sh %%s
#map X console extracthere%space
map C  console shell sh /home/yzl178me/test/shell/zip.sh %%s

map oC  console -p10 shell zip %%s

# mdck
map bb console mkcd%space
# map bcp console -p61 shell /home/yzl178me/aliyun/ossutil64 cp %%s oss://python-api/%%s
map bcp shell python /home/yzl178me/test/python/my_fun/update_aliyun.py %p
map brm console -p58 shell /home/yzl178me/aliyun/ossutil64 rm oss://python-api/%%s

# Change the line mode
# 1. 显示文件大小
# 2. 显示文件信息
# 3. 显示文件修改时间
# 4. 显示文件权限
# 5. 显示文件大小及时间
# 6. 显示文件大小
map Mf linemode filename
map Mi linemode fileinfo
map Mm linemode mtime
map Mp linemode permissions
map Ms linemode sizemtime
map Mt linemode metatitle

# Tagging / Marking
# 1. 标记文件
# 2. 删除标记
# 3. 自定义书签符号
# 4. 选择文件
# 5. 全选文件
# 6. 取消选择
# 7. 连续选中文件
# 8. 连续取消文件
map t       tag_toggle
map ut      tag_remove
map "<any>  tag_toggle tag=%any
map <Space> mark_files toggle=True
map v       mark_files all=True toggle=True
map uv      mark_files all=True val=False
map V       toggle_visual_mode
map uV      toggle_visual_mode reverse=True

## For the nostalgics: Midnight Commander bindings
#map <F1> help
#map <F2> rename_append
#map <F3> display_file
#map <F4> edit
#map <F5> copy
#map <F6> cut
#map <F7> console mkdir%space
#map <F8> console delete
#map <F10> exit

# In case you work on a keyboard with dvorak layout
map <UP>       move up=1
map <DOWN>     move down=1
map <LEFT>     move left=1
map <RIGHT>    move right=1
map <HOME>     move to=0
map <END>      move to=-1
map <PAGEDOWN> move down=1   pages=True
map <PAGEUP>   move up=1     pages=True
map <CR>       move right=1
map <DELETE>   console delete
map <INSERT>   console touch%space

# VIM-like
copymap <UP>       k
copymap <DOWN>     j
copymap <LEFT>     h
copymap <RIGHT>    l
copymap <HOME>     gg
copymap <END>      G
#copymap <PAGEDOWN> <C-F>
#copymap <PAGEUP>   <C-B>
# 移动五行
map J move down=5
map K move up=5
copymap J <C-D>
copymap K <C-U>

# Jumping around
map H     history_go -1
map L     history_go 1
map ]     move_parent -1
map [     move_parent 1
map }     traverse
map {     traverse_backwards
#map )     jump_non

# cd
map gq cd /home/yzl178me/test/python/旧版代码整理/QQ项目相关/QQ中控框架
map gw cd ~/Desktop/work
map gD cd ~/Downloads
map gh cd ~
map g. cd ~/.config
map ge cd /etc
map gu cd /usr
map gd cd /dev
map go cd /opt
map gv cd /var
map gm cd /media
map gi eval fm.cd('/run/media/' + os.getenv('USER'))
map gM cd /mnt
map gs cd /srv
# map gw cd /home/yzl178me/work
map gR eval fm.cd(ranger.RANGERDIR)
map g/ cd /
map g? cd /usr/share/doc/ranger
map gG cd ~/Github
map gt cd ~/test
map gr cd ~/.config/ranger
map gn cd ~/.config/nvim/lua
map gS cd ~/source
map gp cd ~/test/python

# External Programs
map E  edit
map du shell -p du --max-depth=1 -h --apparent-size
map dU shell -p du --max-depth=1 -h --apparent-size | sort -rh
# 1. 复制文件路径
# 2. 复制目录路径
# 3. 复制文件名称
# 4. 复制.前面的内容
map yp yank path
map yd yank dir
map yn yank name
map y. yank name_without_extension

# Filesystem Operations
map = chmod

#map cw console rename%space
# 智能cw
map cw eval fm.execute_console("bulkrename") if fm.thisdir.marked_items else fm.open_console("rename ")
map a  rename_append
map A  eval fm.open_console('rename ' + fm.thisfile.relative_path.replace("%", "%%"))
map I  eval fm.open_console('rename ' + fm.thisfile.relative_path.replace("%", "%%"), position=7)

# 1. 粘贴
# 2. 覆盖
# 3. 同1
# 4. 1 && 2
# 5. 后面的不需要
map pp paste
map po paste overwrite=True
#map pP paste append=True
#map pO paste overwrite=True append=True
map pl paste_symlink relative=False
map pL paste_symlink relative=True
#map phl paste_hardlink
#map pht paste_hardlinked_subtree

# 删除文件
# 剪贴文件
# 取消
# 剪贴全部
# 取消全部
map dD console delete
map dd cut
map ud uncut
map da cut mode=add
map dr cut mode=remove
map dt cut mode=toggle

# 同cut一致
map yy copy
map uy uncut
map ya copy mode=add
map yr copy mode=remove
map yt copy mode=toggle

# Temporary workarounds
map dgg eval fm.cut(dirarg=dict(to=0), narg=quantifier)
map dG  eval fm.cut(dirarg=dict(to=-1), narg=quantifier)
map dj  eval fm.cut(dirarg=dict(down=1), narg=quantifier)
map dk  eval fm.cut(dirarg=dict(up=1), narg=quantifier)
map ygg eval fm.copy(dirarg=dict(to=0), narg=quantifier)
map yG  eval fm.copy(dirarg=dict(to=-1), narg=quantifier)
map yj  eval fm.copy(dirarg=dict(down=1), narg=quantifier)
map yk  eval fm.copy(dirarg=dict(up=1), narg=quantifier)

# Searching
map /  console search%space
map n  search_next
map N  search_next forward=False
map ct search_next order=tag
map cs search_next order=size
map ci search_next order=mimetype
map cc search_next order=ctime
map cm search_next order=mtime
map ca search_next order=atime

# Tabs
# 1. 新建窗口
# 2. 关闭窗口
# 3. 切换窗口
# 4. 同上反向
# 5. 恢复窗口
# 6-14跳转对应窗口
# 15. 移动窗口前
# 16. 移动窗口后
map <C-n>     tab_new
map <C-w>     tab_close
map <TAB>     tab_move 1
map <S-TAB>   tab_move -1
map <C-r>     tab_restore
map <C-1>     tab_open 1
map <C-2>     tab_open 2
map <C-3>     tab_open 3
map <C-4>     tab_open 4
map <C-5>     tab_open 5
map <C-6>     tab_open 6
map <C-7>     tab_open 7
map <C-8>     tab_open 8
map <C-9>     tab_open 9
map <C-j>     tab_shift 1
map <C-k>     tab_shift -1

# Sorting
# 1. 反向排序
# 2. 随机排序
# 3. 按文件大小排序
# 4. 按文件名排序
# 5. 按文件名排序
# 6. 按修改时间排序
# 7. 时间
# 8. 时间
# 9. 类型
# 10. 扩展
map or set sort_reverse!
map oz set sort=random
map os chain set sort=size;      set sort_reverse=False
map ob chain set sort=basename;  set sort_reverse=False
map on chain set sort=natural;   set sort_reverse=False
map om chain set sort=mtime;     set sort_reverse=False
map oc chain set sort=ctime;     set sort_reverse=False
map oa chain set sort=atime;     set sort_reverse=False
map ot chain set sort=type;      set sort_reverse=False
map oe chain set sort=extension; set sort_reverse=False

map oS chain set sort=size;      set sort_reverse=True
map oB chain set sort=basename;  set sort_reverse=True
map oN chain set sort=natural;   set sort_reverse=True
map oM chain set sort=mtime;     set sort_reverse=True
map oC chain set sort=ctime;     set sort_reverse=True
map oA chain set sort=atime;     set sort_reverse=True
map oT chain set sort=type;      set sort_reverse=True
map oE chain set sort=extension; set sort_reverse=True

# 获得累计大小
map dc get_cumulative_size

# Settings
# 1. 折叠视图
# 2. 先排序目录
# 3. 显示隐藏文件
# 4-6. 同上
# 7. 刷新输入
# 8. 预览图片
# 9. 鼠标支持
# 10. 预览文件
# 11. 预览目录
# 12. 排序不区分大小写
# 13. 自动刷新磁盘大小
# 14. 预览脚本
# 15. 筛选文件
map zc    set collapse_preview!
map zd    set sort_directories_first!
map zh    set show_hidden!
map <C-h> set show_hidden!
copymap <C-h> <backspace>
copymap <backspace> <backspace2>
map zI    set flushinput!
map zi    set preview_images!
map zm    set mouse_enabled!
map zp    set preview_files!
map zP    set preview_directories!
map zs    set sort_case_insensitive!
map zu    set autoupdate_cumulative_size!
map zv    set use_preview_script!
map zf    console filter%space
copymap zf zz

# Filter stack
map .n console filter_stack add name%space
map .m console filter_stack add mime%space
map .d filter_stack add type d
map .f filter_stack add type f
map .l filter_stack add type l
map .| filter_stack add or
map .& filter_stack add and
map .! filter_stack add not
map .r console filter_stack rotate
map .c filter_stack clear
map .* filter_stack decompose
map .p filter_stack pop
map .. filter_stack show

# Bookmarks
# 1. 打开书签
# 2. 同上
# 3. 新建书签
# 4. 删除书签
map `<any>  enter_bookmark %any
map '<any>  enter_bookmark %any
map m<any>  set_bookmark %any
map um<any> unset_bookmark %any

map m<bg>   draw_bookmarks
copymap m<bg>  um<bg> `<bg> '<bg>

# Generate all the chmod bindings with some python help:
eval for arg in "rwxXst": cmd("map +u{0} shell -f chmod u+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +g{0} shell -f chmod g+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +o{0} shell -f chmod o+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +a{0} shell -f chmod a+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +{0}  shell -f chmod u+{0} %s".format(arg))

eval for arg in "rwxXst": cmd("map -u{0} shell -f chmod u-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -g{0} shell -f chmod g-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -o{0} shell -f chmod o-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -a{0} shell -f chmod a-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -{0}  shell -f chmod u-{0} %s".format(arg))

# ===================================================================
# == Define keys for the console
# ===================================================================
# Note: Unmapped keys are passed directly to the console.

# Basic
cmap <tab>   eval fm.ui.console.tab()
cmap <s-tab> eval fm.ui.console.tab(-1)
cmap <ESC>   eval fm.ui.console.close()
cmap <CR>    eval fm.ui.console.execute()
cmap <C-l>   redraw_window

copycmap <ESC> <C-c>
copycmap <CR>  <C-j>

# Move around
cmap <up>    eval fm.ui.console.history_move(-1)
cmap <down>  eval fm.ui.console.history_move(1)
cmap <left>  eval fm.ui.console.move(left=1)
cmap <right> eval fm.ui.console.move(right=1)
cmap <home>  eval fm.ui.console.move(right=0, absolute=True)
cmap <end>   eval fm.ui.console.move(right=-1, absolute=True)
cmap <a-b> eval fm.ui.console.move_word(left=1)
cmap <a-f> eval fm.ui.console.move_word(right=1)

copycmap <a-b> <a-left>
copycmap <a-f> <a-right>

# Line Editing
cmap <backspace>  eval fm.ui.console.delete(-1)
cmap <delete>     eval fm.ui.console.delete(0)
cmap <C-w>        eval fm.ui.console.delete_word()
cmap <A-d>        eval fm.ui.console.delete_word(backward=False)
cmap <C-k>        eval fm.ui.console.delete_rest(1)
cmap <C-u>        eval fm.ui.console.delete_rest(-1)
cmap <C-y>        eval fm.ui.console.paste()

# And of course the emacs way
copycmap <ESC>       <C-g>
copycmap <up>        <C-p>
copycmap <down>      <C-n>
copycmap <left>      <C-b>
copycmap <right>     <C-f>
copycmap <home>      <C-a>
copycmap <end>       <C-e>
copycmap <delete>    <C-d>
copycmap <backspace> <C-h>

# Note: There are multiple ways to express backspaces.  <backspace> (code 263)
# and <backspace2> (code 127).  To be sure, use both.
copycmap <backspace> <backspace2>

# This special expression allows typing in numerals:
cmap <allow_quantifiers> false

# ===================================================================
# == Pager Keybindings
# ===================================================================

# Movement
pmap  <down>      pager_move  down=1
pmap  <up>        pager_move  up=1
pmap  <left>      pager_move  left=4
pmap  <right>     pager_move  right=4
pmap  <home>      pager_move  to=0
pmap  <end>       pager_move  to=-1
pmap  <pagedown>  pager_move  down=1.0  pages=True
pmap  <pageup>    pager_move  up=1.0    pages=True
pmap  <C-d>       pager_move  down=0.5  pages=True
pmap  <C-u>       pager_move  up=0.5    pages=True

copypmap <UP>       k  <C-p>
copypmap <DOWN>     j  <C-n> <CR>
copypmap <LEFT>     h
copypmap <RIGHT>    l
copypmap <HOME>     g
copypmap <END>      G
copypmap <C-d>      d
copypmap <C-u>      u
copypmap <PAGEDOWN> n  f  <C-F>  <Space>
copypmap <PAGEUP>   p  b  <C-B>

# Basic
pmap     <C-l> redraw_window
pmap     <ESC> pager_close
copypmap <ESC> q Q i <F3>
pmap E      edit_file

# ===================================================================
# == Taskview Keybindings
# ===================================================================

# Movement
tmap <up>        taskview_move up=1
tmap <down>      taskview_move down=1
tmap <home>      taskview_move to=0
tmap <end>       taskview_move to=-1
tmap <pagedown>  taskview_move down=1.0  pages=True
tmap <pageup>    taskview_move up=1.0    pages=True
tmap <C-d>       taskview_move down=0.5  pages=True
tmap <C-u>       taskview_move up=0.5    pages=True

copytmap <UP>       k  <C-p>
copytmap <DOWN>     j  <C-n> <CR>
copytmap <HOME>     g
copytmap <END>      G
copytmap <C-u>      u
copytmap <PAGEDOWN> n  f  <C-F>  <Space>
copytmap <PAGEUP>   p  b  <C-B>

# Changing priority and deleting tasks
tmap J          eval -q fm.ui.taskview.task_move(-1)
tmap K          eval -q fm.ui.taskview.task_move(0)
tmap dd         eval -q fm.ui.taskview.task_remove()
tmap <pagedown> eval -q fm.ui.taskview.task_move(-1)
tmap <pageup>   eval -q fm.ui.taskview.task_move(0)
tmap <delete>   eval -q fm.ui.taskview.task_remove()

# Basic
tmap <C-l> redraw_window
tmap <ESC> taskview_close
copytmap <ESC> q Q w <C-c>
# a plugin that adds file glyphs / icon support to Ranger:
# https://github.com/alexanderjeurissen/ranger_devicons
default_linemode devicons
